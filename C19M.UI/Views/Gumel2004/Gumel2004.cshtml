@model C19M.UI.Models.Gumel2004

@{
    ViewBag.Title = "Gumel2004";
}

<head>
    <title>Line Chart</title>
    <script src="~/Scripts/Chart.js"></script>
    <script src="https://cdn.jsdelivr.net/npm/luxon@1.15.0"></script>
    <script src="https://cdn.jsdelivr.net/npm/chartjs-adapter-luxon@0.2.0"></script>
    <script src="~/Scripts/utils.js"></script>
    <style>
        canvas {
            -moz-user-select: none;
            -webkit-user-select: none;
            -ms-user-select: none;
        }
    </style>
</head>

<div>
    <canvas id="canvas"></canvas>
</div>
<script>
    function GenerateData(w1, w2) {

        let days = w1;

        let dayCumulativeDiseaseInducedDeaths = w2;

        let data = [];

        let i = 0;

        for (; i < days.length; i++) {
            data.push(
                {
                    x: luxon.DateTime.fromFormat(days[i], 'LLL dd yyyy').valueOf(),
                    y: dayCumulativeDiseaseInducedDeaths[i]
                });
        }

        return data;
    }

    const ctx = document.getElementById('canvas').getContext('2d');
    ctx.canvas.width = 1000;
    ctx.canvas.height = 300;

    var HK_w1 = @Html.Raw(Json.Encode(Model.Days));
    var HK_w2 = @Html.Raw(Json.Encode(Model.HongKong_DayCumulativeDiseaseInducedDeaths_Array));

    var GTA_w1 = @Html.Raw(Json.Encode(Model.Days));
    var GTA_w2 = @Html.Raw(Json.Encode(Model.GreaterTorontoArea_DayCumulativeDiseaseInducedDeaths_Array));

    const color = Chart.helpers.color;

    var HK_ds = {
        label: 'Hong Kong',
        backgroundColor: color(window.chartColors.red).alpha(0.5).rgbString(),
        borderColor: window.chartColors.red,
        data: GenerateData(HK_w1, HK_w2),
        type: 'line',
        pointRadius: 0,
        fill: false,
        lineTension: 0,
        borderWidth: 2
    };

    var GTA_ds = {
        label: 'GTA',
        backgroundColor: color(window.chartColors.green).alpha(0.5).rgbString(),
        borderColor: window.chartColors.green,
        data: GenerateData(GTA_w1, GTA_w2),
        type: 'line',
        pointRadius: 0,
        fill: false,
        lineTension: 0,
        borderWidth: 2
    };

    const cfg = {
        data: {
            datasets: [HK_ds, GTA_ds]
        },
        options: {
            animation: {
                duration: 0
            },
            scales: {
                x: {
                    type: 'time',
                    distribution: 'series',
                    offset: true,
                    ticks: {
                        major: {
                            enabled: true,
                        },
                        fontStyle: 'bold',
                        source: 'data',
                        autoSkip: true,
                        autoSkipPadding: 75,
                        maxRotation: 0,
                        sampleSize: 200
                    },
                },
                y: {
                    type: 'linear',
                    gridLines: {
                        drawBorder: false
                    },
                    scaleLabel: {
                        display: true,
                        labelString: 'Cumulative Number of Disease-Induced Deaths'
                    }
                }
            },
            tooltips: {
                intersect: false,
                mode: 'index',
                callbacks: {
                    label: function (tooltipItem, myData) {
                        let label = myData.datasets[tooltipItem.datasetIndex].label || '';
                        if (label) {
                            label += ': ';
                        }
                        label += parseFloat(tooltipItem.value).toFixed(2);
                        return label;
                    }
                }
            }
        }
    };

    const chart = new Chart(ctx, cfg);
</script>